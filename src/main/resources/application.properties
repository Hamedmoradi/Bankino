server.port=8080
spring.datasource.url= jdbc:postgresql://127.0.0.1:5432/bankino
spring.datasource.username=postgre
spring.datasource.password=post1234
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=validate
hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults= false
spring.datasource.initialization-mode=always
hibernate.show_sql=true
hibernate.hbm2ddl.auto=create
spring.flyway.user=postgre
spring.flyway.password=post1234
spring.flyway.schemas=bankino
spring.flyway.baseline-on-migrate=true
spring.flyway.url=jdbc:postgresql://127.0.0.1:5432/bankino
spring.flyway.locations=classpath:db/migration
#spring.mail.host=
#spring.mail.port=
#spring.mail.username=
#spring.mail.password=
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
#mail.smtp.socketFactory.port=587
debug=true
enableLoggingRequestDetails=true
request.logging.shouldLog=true
management.endpoint.shutdown.enabled=false
management.endpoints.enabled-by-default=true
management.endpoints.jmx.exposure.include=health,info
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=env,beans
management.endpoint.beans.cache.time-to-live=10s
management.endpoint.health.status.order=fatal,down,out-of-service,unknown,up
management.endpoint.health.status.http-mapping.down=503
management.endpoint.health.status.http-mapping.fatal=503
management.endpoint.health.status.http-mapping.out-of-service=503
spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id=bankino_group_id
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.bootstrap-servers = localhost:9092
kafka.bootstrapAddress=localhost:9092
advertised.host.name=localhost
listeners=SASL_PLAINTEXT://localhost:9090
delete.topic.enable = true
security.inter.broker.protocol=SASL_PLAINTEXT
sasl.mechanism.inter.broker.protocol=PLAIN
sasl.enabled.mechanisms=PLAIN
advertised.listeners=SASL_PLAINTEXT://localhost:9090
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=100000
spring.kafka.producer.request.timeout.ms=30000
spring.kafka.producer.linger.ms=10
spring.kafka.producer.acks=0
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.max.block.ms=5000
spring.kafka.bootstrap-servers=localhost:9092,localhost:9093
server.contextPath=/swagger2-demo